datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String @id @unique @default(cuid())
  email     String @unique
  type      String
  firstName String
  lastName  String

  data String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  comments Comment[]

  tasks      TaskUser[]
  subscriber Subscriber?
}

model Subscriber {
  id        String @id @default(cuid())
  company   String
  paymentId String

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Task {
  id          String @id @default(cuid())
  title       String
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  state   State  @relation(fields: [stateId], references: [id])
  stateId String

  comments Comment[]
  users    TaskUser[]
}

model TaskUser {
  id    String @id @default(cuid())
  index Int

  task   Task   @relation(fields: [taskId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  taskId String

  user   User   @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId String
}

model State {
  id      String @id @default(cuid())
  stateId String @unique
  name    String @unique
  tasks   Task[]
}

model Comment {
  id      String @id @default(cuid())
  content String

  data String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  task   Task   @relation(fields: [taskId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  taskId String

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

